apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'kotlin-android'

def static getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.appTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().toLocaleString()}\""
        multiDexEnabled true

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }

    signingConfigs {
        debug { storeFile file("debug.keystore") }

        release {
            storeFile file('release.keystore')
            storePassword 'thisiskeystorepassword'
            keyAlias 'nim_demo'
            keyPassword 'thisiskeypassword'
        }
    }

    buildTypes {
        debug {
//            debuggable false
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile("proguard-android.txt"), 'proguard.cfg'
            signingConfig signingConfigs.debug
            manifestPlaceholders = [AMAP_KEY: "your amap key"]
            ext.enableCrashlytics = false
        }

        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), 'proguard.cfg'
            signingConfig signingConfigs.release
            manifestPlaceholders = [AMAP_KEY: "your amap key"]
            ext.enableCrashlytics = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'res-chatroom', 'res-rp']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }


    compileOptions {
        sourceCompatibility rootProject.ext.appSourceCompatibility
        targetCompatibility rootProject.ext.appTargetCompatibility
    }

    dataBinding {
        enabled = true
    }
}

apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation project(path: ':uikit')
    implementation project(':jrmfRpWalletlib')
    implementation project(path: ':rtskit')

    //debugImplementation project(':plugins:sf')

    implementation 'com.huawei.hms:push:4.0.4.301'
    implementation 'com.meizu.flyme.internet:push-internal:3.9.7'

    implementation 'com.netease.nimlib:jsbridge:1.3.1'

    implementation 'com.google.android.gms:play-services-base:17.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.3'
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    // Java8 support for Lifecycles
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.1.0'


    implementation "androidx.core:core-ktx:1.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"

    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation "com.squareup.okhttp3:logging-interceptor:3.14.7"

    api 'com.netease.yunxin.kit:call-ui:1.3.3'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
}
